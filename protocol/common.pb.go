// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/common.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Role : 用户角色（学生/老师...）
type Role int32

const (
	Role_STUDENT Role = 0
	Role_TEACHER Role = 1
	Role_MANAGER Role = 2
)

var Role_name = map[int32]string{
	0: "STUDENT",
	1: "TEACHER",
	2: "MANAGER",
}

var Role_value = map[string]int32{
	"STUDENT": 0,
	"TEACHER": 1,
	"MANAGER": 2,
}

func (x Role) String() string {
	return proto.EnumName(Role_name, int32(x))
}

func (Role) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1747d3070a2311a0, []int{0}
}

// UserInfo : 用户基本信息
type UserInfo struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Role                 Role     `protobuf:"varint,4,opt,name=role,proto3,enum=protocol.Role" json:"role,omitempty"`
	Name                 string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Sex                  bool     `protobuf:"varint,6,opt,name=sex,proto3" json:"sex,omitempty"`
	Phone                string   `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone,omitempty"`
	Email                string   `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	School               string   `protobuf:"bytes,9,opt,name=school,proto3" json:"school,omitempty"`
	LastLogin            int64    `protobuf:"varint,10,opt,name=last_login,json=lastLogin,proto3" json:"last_login,omitempty"`
	Create               int64    `protobuf:"varint,11,opt,name=create,proto3" json:"create,omitempty"`
	Account              string   `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1747d3070a2311a0, []int{0}
}

func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfo.Unmarshal(m, b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
}
func (m *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(m, src)
}
func (m *UserInfo) XXX_Size() int {
	return xxx_messageInfo_UserInfo.Size(m)
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserInfo) GetRole() Role {
	if m != nil {
		return m.Role
	}
	return Role_STUDENT
}

func (m *UserInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserInfo) GetSex() bool {
	if m != nil {
		return m.Sex
	}
	return false
}

func (m *UserInfo) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *UserInfo) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserInfo) GetSchool() string {
	if m != nil {
		return m.School
	}
	return ""
}

func (m *UserInfo) GetLastLogin() int64 {
	if m != nil {
		return m.LastLogin
	}
	return 0
}

func (m *UserInfo) GetCreate() int64 {
	if m != nil {
		return m.Create
	}
	return 0
}

func (m *UserInfo) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *UserInfo) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// ProblemExample : 题目输入输出样例
type ProblemExample struct {
	Input                string   `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	Output               string   `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProblemExample) Reset()         { *m = ProblemExample{} }
func (m *ProblemExample) String() string { return proto.CompactTextString(m) }
func (*ProblemExample) ProtoMessage()    {}
func (*ProblemExample) Descriptor() ([]byte, []int) {
	return fileDescriptor_1747d3070a2311a0, []int{1}
}

func (m *ProblemExample) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProblemExample.Unmarshal(m, b)
}
func (m *ProblemExample) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProblemExample.Marshal(b, m, deterministic)
}
func (m *ProblemExample) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProblemExample.Merge(m, src)
}
func (m *ProblemExample) XXX_Size() int {
	return xxx_messageInfo_ProblemExample.Size(m)
}
func (m *ProblemExample) XXX_DiscardUnknown() {
	xxx_messageInfo_ProblemExample.DiscardUnknown(m)
}

var xxx_messageInfo_ProblemExample proto.InternalMessageInfo

func (m *ProblemExample) GetInput() string {
	if m != nil {
		return m.Input
	}
	return ""
}

func (m *ProblemExample) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

// Problem : 题目
type Problem struct {
	Id                   int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string            `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description          string            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	In                   string            `protobuf:"bytes,4,opt,name=in,proto3" json:"in,omitempty"`
	Out                  string            `protobuf:"bytes,5,opt,name=out,proto3" json:"out,omitempty"`
	Hint                 string            `protobuf:"bytes,6,opt,name=hint,proto3" json:"hint,omitempty"`
	InOutExamples        []*ProblemExample `protobuf:"bytes,7,rep,name=in_out_examples,json=inOutExamples,proto3" json:"in_out_examples,omitempty"`
	JudgeLimitTime       int64             `protobuf:"varint,8,opt,name=judge_limit_time,json=judgeLimitTime,proto3" json:"judge_limit_time,omitempty"`
	JudgeLimitMem        int64             `protobuf:"varint,9,opt,name=judge_limit_mem,json=judgeLimitMem,proto3" json:"judge_limit_mem,omitempty"`
	Tags                 []int64           `protobuf:"varint,10,rep,packed,name=tags,proto3" json:"tags,omitempty"`
	Difficulty           int64             `protobuf:"varint,11,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Cognition            int64             `protobuf:"varint,12,opt,name=cognition,proto3" json:"cognition,omitempty"`
	SubmitTime           int64             `protobuf:"varint,13,opt,name=submit_time,json=submitTime,proto3" json:"submit_time,omitempty"`
	AcceptTime           int64             `protobuf:"varint,14,opt,name=accept_time,json=acceptTime,proto3" json:"accept_time,omitempty"`
	CreateTime           int64             `protobuf:"varint,15,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Publisher            string            `protobuf:"bytes,16,opt,name=publisher,proto3" json:"publisher,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Problem) Reset()         { *m = Problem{} }
func (m *Problem) String() string { return proto.CompactTextString(m) }
func (*Problem) ProtoMessage()    {}
func (*Problem) Descriptor() ([]byte, []int) {
	return fileDescriptor_1747d3070a2311a0, []int{2}
}

func (m *Problem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Problem.Unmarshal(m, b)
}
func (m *Problem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Problem.Marshal(b, m, deterministic)
}
func (m *Problem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Problem.Merge(m, src)
}
func (m *Problem) XXX_Size() int {
	return xxx_messageInfo_Problem.Size(m)
}
func (m *Problem) XXX_DiscardUnknown() {
	xxx_messageInfo_Problem.DiscardUnknown(m)
}

var xxx_messageInfo_Problem proto.InternalMessageInfo

func (m *Problem) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Problem) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Problem) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Problem) GetIn() string {
	if m != nil {
		return m.In
	}
	return ""
}

func (m *Problem) GetOut() string {
	if m != nil {
		return m.Out
	}
	return ""
}

func (m *Problem) GetHint() string {
	if m != nil {
		return m.Hint
	}
	return ""
}

func (m *Problem) GetInOutExamples() []*ProblemExample {
	if m != nil {
		return m.InOutExamples
	}
	return nil
}

func (m *Problem) GetJudgeLimitTime() int64 {
	if m != nil {
		return m.JudgeLimitTime
	}
	return 0
}

func (m *Problem) GetJudgeLimitMem() int64 {
	if m != nil {
		return m.JudgeLimitMem
	}
	return 0
}

func (m *Problem) GetTags() []int64 {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Problem) GetDifficulty() int64 {
	if m != nil {
		return m.Difficulty
	}
	return 0
}

func (m *Problem) GetCognition() int64 {
	if m != nil {
		return m.Cognition
	}
	return 0
}

func (m *Problem) GetSubmitTime() int64 {
	if m != nil {
		return m.SubmitTime
	}
	return 0
}

func (m *Problem) GetAcceptTime() int64 {
	if m != nil {
		return m.AcceptTime
	}
	return 0
}

func (m *Problem) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *Problem) GetPublisher() string {
	if m != nil {
		return m.Publisher
	}
	return ""
}

// SubmitRecord : 提交情况
type SubmitRecord struct {
	Problem              *Problem `protobuf:"bytes,1,opt,name=problem,proto3" json:"problem,omitempty"`
	SubmitTime           int64    `protobuf:"varint,2,opt,name=submit_time,json=submitTime,proto3" json:"submit_time,omitempty"`
	IsPass               bool     `protobuf:"varint,3,opt,name=is_pass,json=isPass,proto3" json:"is_pass,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitRecord) Reset()         { *m = SubmitRecord{} }
func (m *SubmitRecord) String() string { return proto.CompactTextString(m) }
func (*SubmitRecord) ProtoMessage()    {}
func (*SubmitRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_1747d3070a2311a0, []int{3}
}

func (m *SubmitRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitRecord.Unmarshal(m, b)
}
func (m *SubmitRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitRecord.Marshal(b, m, deterministic)
}
func (m *SubmitRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitRecord.Merge(m, src)
}
func (m *SubmitRecord) XXX_Size() int {
	return xxx_messageInfo_SubmitRecord.Size(m)
}
func (m *SubmitRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitRecord.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitRecord proto.InternalMessageInfo

func (m *SubmitRecord) GetProblem() *Problem {
	if m != nil {
		return m.Problem
	}
	return nil
}

func (m *SubmitRecord) GetSubmitTime() int64 {
	if m != nil {
		return m.SubmitTime
	}
	return 0
}

func (m *SubmitRecord) GetIsPass() bool {
	if m != nil {
		return m.IsPass
	}
	return false
}

// Announcement : 公告，包括班级公告和全局公告
type Announcement struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Publisher            string   `protobuf:"bytes,2,opt,name=publisher,proto3" json:"publisher,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Detail               string   `protobuf:"bytes,4,opt,name=detail,proto3" json:"detail,omitempty"`
	CreateTime           int64    `protobuf:"varint,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	LastUpdateTime       int64    `protobuf:"varint,6,opt,name=last_update_time,json=lastUpdateTime,proto3" json:"last_update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Announcement) Reset()         { *m = Announcement{} }
func (m *Announcement) String() string { return proto.CompactTextString(m) }
func (*Announcement) ProtoMessage()    {}
func (*Announcement) Descriptor() ([]byte, []int) {
	return fileDescriptor_1747d3070a2311a0, []int{4}
}

func (m *Announcement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Announcement.Unmarshal(m, b)
}
func (m *Announcement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Announcement.Marshal(b, m, deterministic)
}
func (m *Announcement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Announcement.Merge(m, src)
}
func (m *Announcement) XXX_Size() int {
	return xxx_messageInfo_Announcement.Size(m)
}
func (m *Announcement) XXX_DiscardUnknown() {
	xxx_messageInfo_Announcement.DiscardUnknown(m)
}

var xxx_messageInfo_Announcement proto.InternalMessageInfo

func (m *Announcement) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Announcement) GetPublisher() string {
	if m != nil {
		return m.Publisher
	}
	return ""
}

func (m *Announcement) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Announcement) GetDetail() string {
	if m != nil {
		return m.Detail
	}
	return ""
}

func (m *Announcement) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *Announcement) GetLastUpdateTime() int64 {
	if m != nil {
		return m.LastUpdateTime
	}
	return 0
}

// Class : 班级信息
type Class struct {
	Id                   int64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Tutor                string          `protobuf:"bytes,2,opt,name=tutor,proto3" json:"tutor,omitempty"`
	Name                 string          `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Introduction         string          `protobuf:"bytes,4,opt,name=introduction,proto3" json:"introduction,omitempty"`
	Number               int64           `protobuf:"varint,5,opt,name=number,proto3" json:"number,omitempty"`
	IsCheck              bool            `protobuf:"varint,6,opt,name=is_check,json=isCheck,proto3" json:"is_check,omitempty"`
	CreateTime           int64           `protobuf:"varint,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Announcements        []*Announcement `protobuf:"bytes,8,rep,name=announcements,proto3" json:"announcements,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Class) Reset()         { *m = Class{} }
func (m *Class) String() string { return proto.CompactTextString(m) }
func (*Class) ProtoMessage()    {}
func (*Class) Descriptor() ([]byte, []int) {
	return fileDescriptor_1747d3070a2311a0, []int{5}
}

func (m *Class) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Class.Unmarshal(m, b)
}
func (m *Class) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Class.Marshal(b, m, deterministic)
}
func (m *Class) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Class.Merge(m, src)
}
func (m *Class) XXX_Size() int {
	return xxx_messageInfo_Class.Size(m)
}
func (m *Class) XXX_DiscardUnknown() {
	xxx_messageInfo_Class.DiscardUnknown(m)
}

var xxx_messageInfo_Class proto.InternalMessageInfo

func (m *Class) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Class) GetTutor() string {
	if m != nil {
		return m.Tutor
	}
	return ""
}

func (m *Class) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Class) GetIntroduction() string {
	if m != nil {
		return m.Introduction
	}
	return ""
}

func (m *Class) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *Class) GetIsCheck() bool {
	if m != nil {
		return m.IsCheck
	}
	return false
}

func (m *Class) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *Class) GetAnnouncements() []*Announcement {
	if m != nil {
		return m.Announcements
	}
	return nil
}

// RankItem : 排名item
type RankItem struct {
	Ranking              int64    `protobuf:"varint,1,opt,name=ranking,proto3" json:"ranking,omitempty"`
	UserId               int64    `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	PassNum              int64    `protobuf:"varint,4,opt,name=pass_num,json=passNum,proto3" json:"pass_num,omitempty"`
	SubmitNum            int64    `protobuf:"varint,5,opt,name=submit_num,json=submitNum,proto3" json:"submit_num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RankItem) Reset()         { *m = RankItem{} }
func (m *RankItem) String() string { return proto.CompactTextString(m) }
func (*RankItem) ProtoMessage()    {}
func (*RankItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_1747d3070a2311a0, []int{6}
}

func (m *RankItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RankItem.Unmarshal(m, b)
}
func (m *RankItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RankItem.Marshal(b, m, deterministic)
}
func (m *RankItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RankItem.Merge(m, src)
}
func (m *RankItem) XXX_Size() int {
	return xxx_messageInfo_RankItem.Size(m)
}
func (m *RankItem) XXX_DiscardUnknown() {
	xxx_messageInfo_RankItem.DiscardUnknown(m)
}

var xxx_messageInfo_RankItem proto.InternalMessageInfo

func (m *RankItem) GetRanking() int64 {
	if m != nil {
		return m.Ranking
	}
	return 0
}

func (m *RankItem) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *RankItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RankItem) GetPassNum() int64 {
	if m != nil {
		return m.PassNum
	}
	return 0
}

func (m *RankItem) GetSubmitNum() int64 {
	if m != nil {
		return m.SubmitNum
	}
	return 0
}

// Paper : 试卷
type Paper struct {
	Id       int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Problems []*Problem `protobuf:"bytes,2,rep,name=problems,proto3" json:"problems,omitempty"`
	// 组卷的参数
	Difficulty           map[int64]int64 `protobuf:"bytes,3,rep,name=difficulty,proto3" json:"difficulty,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	KnowledgePoints      map[int64]int64 `protobuf:"bytes,4,rep,name=knowledge_points,json=knowledgePoints,proto3" json:"knowledge_points,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Cognition            map[int64]int64 `protobuf:"bytes,5,rep,name=cognition,proto3" json:"cognition,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Paper) Reset()         { *m = Paper{} }
func (m *Paper) String() string { return proto.CompactTextString(m) }
func (*Paper) ProtoMessage()    {}
func (*Paper) Descriptor() ([]byte, []int) {
	return fileDescriptor_1747d3070a2311a0, []int{7}
}

func (m *Paper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Paper.Unmarshal(m, b)
}
func (m *Paper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Paper.Marshal(b, m, deterministic)
}
func (m *Paper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Paper.Merge(m, src)
}
func (m *Paper) XXX_Size() int {
	return xxx_messageInfo_Paper.Size(m)
}
func (m *Paper) XXX_DiscardUnknown() {
	xxx_messageInfo_Paper.DiscardUnknown(m)
}

var xxx_messageInfo_Paper proto.InternalMessageInfo

func (m *Paper) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Paper) GetProblems() []*Problem {
	if m != nil {
		return m.Problems
	}
	return nil
}

func (m *Paper) GetDifficulty() map[int64]int64 {
	if m != nil {
		return m.Difficulty
	}
	return nil
}

func (m *Paper) GetKnowledgePoints() map[int64]int64 {
	if m != nil {
		return m.KnowledgePoints
	}
	return nil
}

func (m *Paper) GetCognition() map[int64]int64 {
	if m != nil {
		return m.Cognition
	}
	return nil
}

// Match : 比赛
type Match struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	IsPublic             bool     `protobuf:"varint,2,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	StartTime            int64    `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              int64    `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	IsOver               bool     `protobuf:"varint,5,opt,name=is_over,json=isOver,proto3" json:"is_over,omitempty"`
	Name                 string   `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Introduction         string   `protobuf:"bytes,7,opt,name=introduction,proto3" json:"introduction,omitempty"`
	PaperId              int64    `protobuf:"varint,8,opt,name=paper_id,json=paperId,proto3" json:"paper_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Match) Reset()         { *m = Match{} }
func (m *Match) String() string { return proto.CompactTextString(m) }
func (*Match) ProtoMessage()    {}
func (*Match) Descriptor() ([]byte, []int) {
	return fileDescriptor_1747d3070a2311a0, []int{8}
}

func (m *Match) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Match.Unmarshal(m, b)
}
func (m *Match) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Match.Marshal(b, m, deterministic)
}
func (m *Match) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Match.Merge(m, src)
}
func (m *Match) XXX_Size() int {
	return xxx_messageInfo_Match.Size(m)
}
func (m *Match) XXX_DiscardUnknown() {
	xxx_messageInfo_Match.DiscardUnknown(m)
}

var xxx_messageInfo_Match proto.InternalMessageInfo

func (m *Match) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Match) GetIsPublic() bool {
	if m != nil {
		return m.IsPublic
	}
	return false
}

func (m *Match) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *Match) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *Match) GetIsOver() bool {
	if m != nil {
		return m.IsOver
	}
	return false
}

func (m *Match) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Match) GetIntroduction() string {
	if m != nil {
		return m.Introduction
	}
	return ""
}

func (m *Match) GetPaperId() int64 {
	if m != nil {
		return m.PaperId
	}
	return 0
}

func init() {
	proto.RegisterEnum("protocol.Role", Role_name, Role_value)
	proto.RegisterType((*UserInfo)(nil), "protocol.UserInfo")
	proto.RegisterType((*ProblemExample)(nil), "protocol.ProblemExample")
	proto.RegisterType((*Problem)(nil), "protocol.Problem")
	proto.RegisterType((*SubmitRecord)(nil), "protocol.SubmitRecord")
	proto.RegisterType((*Announcement)(nil), "protocol.Announcement")
	proto.RegisterType((*Class)(nil), "protocol.Class")
	proto.RegisterType((*RankItem)(nil), "protocol.RankItem")
	proto.RegisterType((*Paper)(nil), "protocol.Paper")
	proto.RegisterMapType((map[int64]int64)(nil), "protocol.Paper.CognitionEntry")
	proto.RegisterMapType((map[int64]int64)(nil), "protocol.Paper.DifficultyEntry")
	proto.RegisterMapType((map[int64]int64)(nil), "protocol.Paper.KnowledgePointsEntry")
	proto.RegisterType((*Match)(nil), "protocol.Match")
}

func init() { proto.RegisterFile("proto/common.proto", fileDescriptor_1747d3070a2311a0) }

var fileDescriptor_1747d3070a2311a0 = []byte{
	// 1041 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0xcd, 0x6e, 0x23, 0x45,
	0x10, 0xc6, 0x9e, 0xd8, 0x33, 0x2e, 0x27, 0x8e, 0xb7, 0x59, 0x85, 0x49, 0x58, 0x36, 0xd6, 0x08,
	0x21, 0x0b, 0xb4, 0x41, 0x0a, 0x17, 0x04, 0xe1, 0x27, 0x9b, 0xb5, 0x20, 0x62, 0xf3, 0xa3, 0xd9,
	0xe4, 0xc2, 0xc5, 0x9a, 0xcc, 0x74, 0xe2, 0xc6, 0x33, 0xdd, 0xa3, 0xe9, 0xee, 0xec, 0xe6, 0x19,
	0x38, 0xf3, 0x28, 0x3c, 0x0b, 0x12, 0x0f, 0xc1, 0x95, 0x2b, 0xea, 0xea, 0x1e, 0xff, 0x46, 0x48,
	0x7b, 0x72, 0x7f, 0x5f, 0x57, 0xd5, 0x54, 0x57, 0x7d, 0x55, 0x32, 0x90, 0xb2, 0x12, 0x4a, 0x7c,
	0x99, 0x8a, 0xa2, 0x10, 0xfc, 0x00, 0x01, 0x09, 0xf0, 0x27, 0x15, 0x79, 0xf4, 0x47, 0x13, 0x82,
	0x6b, 0x49, 0xab, 0x53, 0x7e, 0x2b, 0x48, 0x0f, 0x9a, 0x2c, 0x0b, 0x1b, 0x83, 0xc6, 0xd0, 0x8b,
	0x9b, 0x2c, 0x23, 0x11, 0x6c, 0x54, 0x22, 0xa7, 0xe1, 0xc6, 0xa0, 0x31, 0xec, 0x1d, 0xf6, 0x0e,
	0x6a, 0xaf, 0x83, 0x58, 0xe4, 0x34, 0xc6, 0x3b, 0x42, 0x60, 0x83, 0x27, 0x05, 0x0d, 0x5b, 0x83,
	0xc6, 0xb0, 0x13, 0xe3, 0x99, 0xf4, 0xc1, 0x93, 0xf4, 0x5d, 0xd8, 0x1e, 0x34, 0x86, 0x41, 0x6c,
	0x8e, 0xe4, 0x29, 0xb4, 0xca, 0x89, 0xe0, 0x34, 0xf4, 0xd1, 0xcc, 0x02, 0xc3, 0xd2, 0x22, 0x61,
	0x79, 0x18, 0x58, 0x16, 0x01, 0xd9, 0x81, 0xb6, 0x4c, 0x27, 0x42, 0xe4, 0x61, 0x07, 0x69, 0x87,
	0xc8, 0x27, 0x00, 0x79, 0x22, 0xd5, 0x38, 0x17, 0x77, 0x8c, 0x87, 0x80, 0x59, 0x76, 0x0c, 0xf3,
	0xda, 0x10, 0xc6, 0x2d, 0xad, 0x68, 0xa2, 0x68, 0xd8, 0xc5, 0x2b, 0x87, 0x48, 0x08, 0x7e, 0x92,
	0xa6, 0x42, 0x73, 0x15, 0x36, 0x31, 0x5e, 0x0d, 0xc9, 0x1e, 0x04, 0x65, 0x22, 0xe5, 0x5b, 0x51,
	0x65, 0xa1, 0x87, 0x57, 0x33, 0x1c, 0x7d, 0x0f, 0xbd, 0xcb, 0x4a, 0xdc, 0xe4, 0xb4, 0x18, 0xbd,
	0x4b, 0x8a, 0x32, 0xc7, 0x64, 0x19, 0x2f, 0xb5, 0xc2, 0xfa, 0x74, 0x62, 0x0b, 0xcc, 0x57, 0x85,
	0x56, 0x86, 0xb6, 0xc1, 0x1d, 0x8a, 0xfe, 0xf1, 0xc0, 0x77, 0x01, 0xd6, 0xca, 0xfa, 0x14, 0x5a,
	0x8a, 0xa9, 0x9c, 0x3a, 0x17, 0x0b, 0xc8, 0x00, 0xba, 0x19, 0x95, 0x69, 0xc5, 0x4a, 0xc5, 0x04,
	0x77, 0x09, 0x2d, 0x52, 0x18, 0x87, 0x63, 0x33, 0x3a, 0x71, 0x93, 0x71, 0x53, 0x66, 0xa1, 0x95,
	0xab, 0xbc, 0x39, 0x9a, 0x66, 0x4c, 0x18, 0x57, 0x58, 0xf9, 0x4e, 0x8c, 0x67, 0xf2, 0x23, 0x6c,
	0x33, 0x3e, 0x16, 0x5a, 0x8d, 0xa9, 0x7d, 0x89, 0x0c, 0xfd, 0x81, 0x37, 0xec, 0x1e, 0x86, 0xf3,
	0x7e, 0x2e, 0x3f, 0x35, 0xde, 0x62, 0xfc, 0x42, 0x2b, 0x87, 0x24, 0x19, 0x42, 0xff, 0x37, 0x9d,
	0xdd, 0xd1, 0x71, 0xce, 0x0a, 0xa6, 0xc6, 0x8a, 0x15, 0x14, 0x3b, 0xe6, 0xc5, 0x3d, 0xe4, 0x5f,
	0x1b, 0xfa, 0x8a, 0x15, 0x94, 0x7c, 0x06, 0xdb, 0x8b, 0x96, 0x05, 0x2d, 0xb0, 0x87, 0x5e, 0xbc,
	0x35, 0x37, 0x3c, 0xa3, 0x85, 0xc9, 0x53, 0x25, 0x77, 0x32, 0x84, 0x81, 0x37, 0xf4, 0x62, 0x3c,
	0x93, 0xe7, 0x00, 0x19, 0xbb, 0xbd, 0x65, 0xa9, 0xce, 0xd5, 0x83, 0xeb, 0xe1, 0x02, 0x43, 0x9e,
	0x41, 0x27, 0x15, 0x77, 0x9c, 0x61, 0x75, 0x36, 0x6d, 0xf7, 0x67, 0x04, 0xd9, 0x87, 0xae, 0xd4,
	0x37, 0xb3, 0xf4, 0xb6, 0xac, 0xbb, 0xa5, 0x30, 0xb5, 0x7d, 0xe8, 0x26, 0x69, 0x4a, 0x4b, 0x67,
	0xd0, 0xb3, 0x06, 0x96, 0xaa, 0x0d, 0xac, 0x62, 0xac, 0xc1, 0xb6, 0x35, 0xb0, 0x14, 0x1a, 0x3c,
	0x83, 0x4e, 0xa9, 0x6f, 0x72, 0x26, 0x27, 0xb4, 0x0a, 0xfb, 0x58, 0xe1, 0x39, 0x11, 0x69, 0xd8,
	0x7c, 0x83, 0x5f, 0x8b, 0x69, 0x2a, 0xaa, 0x8c, 0x7c, 0x01, 0x7e, 0x69, 0xab, 0x8a, 0x9d, 0xef,
	0x1e, 0x3e, 0x59, 0x2b, 0x77, 0x5c, 0x5b, 0xac, 0x66, 0xdf, 0x5c, 0xcb, 0xfe, 0x23, 0xf0, 0x99,
	0x1c, 0x1b, 0x75, 0xa2, 0x30, 0x82, 0xb8, 0xcd, 0xe4, 0x65, 0x22, 0x65, 0xf4, 0x67, 0x03, 0x36,
	0x8f, 0x39, 0x17, 0x9a, 0xa7, 0xb4, 0xa0, 0x5c, 0xad, 0x89, 0x6d, 0x29, 0xeb, 0xe6, 0x4a, 0xd6,
	0x73, 0x29, 0x7a, 0x8b, 0x52, 0xdc, 0x81, 0x76, 0x46, 0x95, 0x19, 0x4c, 0x2b, 0x36, 0x87, 0x56,
	0x4b, 0xd4, 0x5a, 0x2b, 0xd1, 0x10, 0xfa, 0x38, 0xa2, 0xba, 0xcc, 0x66, 0x56, 0x6d, 0xab, 0x14,
	0xc3, 0x5f, 0x23, 0x6d, 0x2c, 0xa3, 0x7f, 0x1b, 0xd0, 0x3a, 0xc9, 0x13, 0x29, 0x1f, 0x9d, 0x0e,
	0xad, 0x44, 0x35, 0x9b, 0x0e, 0x03, 0x66, 0x6b, 0xc6, 0x5b, 0x58, 0x33, 0x11, 0x6c, 0x32, 0xae,
	0x2a, 0x91, 0xe9, 0x14, 0x45, 0x61, 0x93, 0x5d, 0xe2, 0xcc, 0x53, 0xb8, 0x2e, 0x6e, 0x68, 0xe5,
	0xb2, 0x75, 0x88, 0xec, 0x42, 0xc0, 0xe4, 0x38, 0x9d, 0xd0, 0x74, 0xea, 0xf6, 0x94, 0xcf, 0xe4,
	0x89, 0x81, 0xab, 0xaf, 0xf4, 0xd7, 0x5e, 0x79, 0x04, 0x5b, 0xc9, 0x42, 0xc9, 0x65, 0x18, 0xe0,
	0x3c, 0xed, 0xcc, 0x1b, 0xbc, 0xd8, 0x91, 0x78, 0xd9, 0x38, 0xfa, 0xbd, 0x01, 0x41, 0x9c, 0xf0,
	0xe9, 0xa9, 0xa2, 0x85, 0x59, 0x4e, 0x55, 0xc2, 0xa7, 0x8c, 0xdf, 0xb9, 0x0a, 0xd4, 0xd0, 0x74,
	0x5c, 0x4b, 0x5a, 0x8d, 0x59, 0xe6, 0xe4, 0xd0, 0x36, 0xf0, 0x34, 0x7b, 0xb4, 0x12, 0xbb, 0x76,
	0x93, 0x8d, 0xb9, 0x2e, 0xb0, 0x0a, 0x5e, 0xec, 0x1b, 0x7c, 0xae, 0x0b, 0xb3, 0x35, 0x9d, 0xb4,
	0xcc, 0xa5, 0x2d, 0x42, 0xc7, 0x32, 0xe7, 0xba, 0x88, 0xfe, 0xf2, 0xa0, 0x75, 0x99, 0x94, 0xb4,
	0x5a, 0xeb, 0xc3, 0x0b, 0x08, 0x9c, 0x3c, 0x65, 0xd8, 0xc4, 0x07, 0x3e, 0xa2, 0xe0, 0x99, 0x09,
	0xf9, 0x61, 0x69, 0x7c, 0x3d, 0x74, 0xd8, 0x5f, 0x70, 0x30, 0xdf, 0x38, 0x78, 0x35, 0xb3, 0x18,
	0x71, 0x55, 0x3d, 0x2c, 0xcd, 0xf7, 0x05, 0xf4, 0xa7, 0x5c, 0xbc, 0xcd, 0xa9, 0xd9, 0x1f, 0xa5,
	0x60, 0xa6, 0xb0, 0x1b, 0x18, 0xe6, 0xd3, 0xd5, 0x30, 0xbf, 0xd4, 0x76, 0x97, 0x68, 0x66, 0x63,
	0x6d, 0x4f, 0x97, 0x59, 0x72, 0xb4, 0xb8, 0x30, 0x5a, 0x18, 0xe9, 0xf9, 0x6a, 0xa4, 0x93, 0xda,
	0xc0, 0xc6, 0x98, 0x3b, 0xec, 0x7d, 0x07, 0xdb, 0x2b, 0xd9, 0x9a, 0x7d, 0x3b, 0xa5, 0x0f, 0xae,
	0x44, 0xe6, 0x68, 0xb4, 0x7a, 0x9f, 0xe4, 0xba, 0x9e, 0x58, 0x0b, 0xbe, 0x69, 0x7e, 0xdd, 0xd8,
	0x7b, 0x09, 0x4f, 0x1f, 0xcb, 0xf2, 0xbd, 0x62, 0x1c, 0x41, 0x6f, 0x39, 0xbf, 0xf7, 0xf1, 0x8e,
	0xfe, 0x6e, 0x40, 0xeb, 0x2c, 0x51, 0xe9, 0x64, 0xad, 0xb3, 0x1f, 0x43, 0xc7, 0x2c, 0x13, 0xb3,
	0x04, 0x52, 0xf4, 0x0b, 0xe2, 0x80, 0xc9, 0x4b, 0xc4, 0xa8, 0x17, 0x95, 0x54, 0x6e, 0x13, 0x79,
	0x4e, 0x2f, 0x86, 0x41, 0xed, 0xef, 0x42, 0x40, 0x79, 0x66, 0x2f, 0x9d, 0xd2, 0x28, 0xcf, 0x16,
	0x76, 0x94, 0xb8, 0x77, 0xb3, 0x86, 0x3b, 0xea, 0xe2, 0x9e, 0xce, 0x67, 0xb7, 0xfd, 0x3f, 0xb3,
	0xeb, 0x3f, 0x32, 0xbb, 0xa8, 0xea, 0xd2, 0xce, 0x40, 0x50, 0xab, 0xba, 0x34, 0x43, 0xf0, 0xf9,
	0x0b, 0xd8, 0x30, 0xff, 0x41, 0x48, 0x17, 0xfc, 0x37, 0x57, 0xd7, 0xaf, 0x46, 0xe7, 0x57, 0xfd,
	0x0f, 0x0c, 0xb8, 0x1a, 0x1d, 0x9f, 0xfc, 0x3c, 0x8a, 0xfb, 0x0d, 0x03, 0xce, 0x8e, 0xcf, 0x8f,
	0x7f, 0x1a, 0xc5, 0xfd, 0xe6, 0xcb, 0x0f, 0x7f, 0x7d, 0x52, 0x37, 0xfe, 0xdb, 0xfa, 0x70, 0xd3,
	0xc6, 0xd3, 0x57, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0x27, 0xf7, 0x72, 0xe0, 0x21, 0x09, 0x00,
	0x00,
}
