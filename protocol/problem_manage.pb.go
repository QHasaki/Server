// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/problem_manage.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 获取全部题目信息（只下发 id & title & difficulty & pass_rate）
type GetProblemsReq struct {
	Tag                  string   `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProblemsReq) Reset()         { *m = GetProblemsReq{} }
func (m *GetProblemsReq) String() string { return proto.CompactTextString(m) }
func (*GetProblemsReq) ProtoMessage()    {}
func (*GetProblemsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2e4af9cb4edd521, []int{0}
}

func (m *GetProblemsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProblemsReq.Unmarshal(m, b)
}
func (m *GetProblemsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProblemsReq.Marshal(b, m, deterministic)
}
func (m *GetProblemsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProblemsReq.Merge(m, src)
}
func (m *GetProblemsReq) XXX_Size() int {
	return xxx_messageInfo_GetProblemsReq.Size(m)
}
func (m *GetProblemsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProblemsReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetProblemsReq proto.InternalMessageInfo

func (m *GetProblemsReq) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

type GetProblemsResp struct {
	Problems             []*Problem `protobuf:"bytes,2,rep,name=problems,proto3" json:"problems,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetProblemsResp) Reset()         { *m = GetProblemsResp{} }
func (m *GetProblemsResp) String() string { return proto.CompactTextString(m) }
func (*GetProblemsResp) ProtoMessage()    {}
func (*GetProblemsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2e4af9cb4edd521, []int{1}
}

func (m *GetProblemsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProblemsResp.Unmarshal(m, b)
}
func (m *GetProblemsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProblemsResp.Marshal(b, m, deterministic)
}
func (m *GetProblemsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProblemsResp.Merge(m, src)
}
func (m *GetProblemsResp) XXX_Size() int {
	return xxx_messageInfo_GetProblemsResp.Size(m)
}
func (m *GetProblemsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProblemsResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetProblemsResp proto.InternalMessageInfo

func (m *GetProblemsResp) GetProblems() []*Problem {
	if m != nil {
		return m.Problems
	}
	return nil
}

// 根据ID获得题目具体信息
type GetProblemByIDReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProblemByIDReq) Reset()         { *m = GetProblemByIDReq{} }
func (m *GetProblemByIDReq) String() string { return proto.CompactTextString(m) }
func (*GetProblemByIDReq) ProtoMessage()    {}
func (*GetProblemByIDReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2e4af9cb4edd521, []int{2}
}

func (m *GetProblemByIDReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProblemByIDReq.Unmarshal(m, b)
}
func (m *GetProblemByIDReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProblemByIDReq.Marshal(b, m, deterministic)
}
func (m *GetProblemByIDReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProblemByIDReq.Merge(m, src)
}
func (m *GetProblemByIDReq) XXX_Size() int {
	return xxx_messageInfo_GetProblemByIDReq.Size(m)
}
func (m *GetProblemByIDReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProblemByIDReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetProblemByIDReq proto.InternalMessageInfo

func (m *GetProblemByIDReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetProblemByIDResp struct {
	Problem              *Problem `protobuf:"bytes,2,opt,name=problem,proto3" json:"problem,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProblemByIDResp) Reset()         { *m = GetProblemByIDResp{} }
func (m *GetProblemByIDResp) String() string { return proto.CompactTextString(m) }
func (*GetProblemByIDResp) ProtoMessage()    {}
func (*GetProblemByIDResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2e4af9cb4edd521, []int{3}
}

func (m *GetProblemByIDResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProblemByIDResp.Unmarshal(m, b)
}
func (m *GetProblemByIDResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProblemByIDResp.Marshal(b, m, deterministic)
}
func (m *GetProblemByIDResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProblemByIDResp.Merge(m, src)
}
func (m *GetProblemByIDResp) XXX_Size() int {
	return xxx_messageInfo_GetProblemByIDResp.Size(m)
}
func (m *GetProblemByIDResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProblemByIDResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetProblemByIDResp proto.InternalMessageInfo

func (m *GetProblemByIDResp) GetProblem() *Problem {
	if m != nil {
		return m.Problem
	}
	return nil
}

// 新增题目
type AddProblemReq struct {
	Problem              *Problem `protobuf:"bytes,1,opt,name=problem,proto3" json:"problem,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddProblemReq) Reset()         { *m = AddProblemReq{} }
func (m *AddProblemReq) String() string { return proto.CompactTextString(m) }
func (*AddProblemReq) ProtoMessage()    {}
func (*AddProblemReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2e4af9cb4edd521, []int{4}
}

func (m *AddProblemReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddProblemReq.Unmarshal(m, b)
}
func (m *AddProblemReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddProblemReq.Marshal(b, m, deterministic)
}
func (m *AddProblemReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddProblemReq.Merge(m, src)
}
func (m *AddProblemReq) XXX_Size() int {
	return xxx_messageInfo_AddProblemReq.Size(m)
}
func (m *AddProblemReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddProblemReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddProblemReq proto.InternalMessageInfo

func (m *AddProblemReq) GetProblem() *Problem {
	if m != nil {
		return m.Problem
	}
	return nil
}

type AddProblemResp struct {
	IsSuccess            bool     `protobuf:"varint,2,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddProblemResp) Reset()         { *m = AddProblemResp{} }
func (m *AddProblemResp) String() string { return proto.CompactTextString(m) }
func (*AddProblemResp) ProtoMessage()    {}
func (*AddProblemResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2e4af9cb4edd521, []int{5}
}

func (m *AddProblemResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddProblemResp.Unmarshal(m, b)
}
func (m *AddProblemResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddProblemResp.Marshal(b, m, deterministic)
}
func (m *AddProblemResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddProblemResp.Merge(m, src)
}
func (m *AddProblemResp) XXX_Size() int {
	return xxx_messageInfo_AddProblemResp.Size(m)
}
func (m *AddProblemResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AddProblemResp.DiscardUnknown(m)
}

var xxx_messageInfo_AddProblemResp proto.InternalMessageInfo

func (m *AddProblemResp) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

// 编辑题目
type EditProblemReq struct {
	Problem              *Problem `protobuf:"bytes,1,opt,name=problem,proto3" json:"problem,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EditProblemReq) Reset()         { *m = EditProblemReq{} }
func (m *EditProblemReq) String() string { return proto.CompactTextString(m) }
func (*EditProblemReq) ProtoMessage()    {}
func (*EditProblemReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2e4af9cb4edd521, []int{6}
}

func (m *EditProblemReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditProblemReq.Unmarshal(m, b)
}
func (m *EditProblemReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditProblemReq.Marshal(b, m, deterministic)
}
func (m *EditProblemReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditProblemReq.Merge(m, src)
}
func (m *EditProblemReq) XXX_Size() int {
	return xxx_messageInfo_EditProblemReq.Size(m)
}
func (m *EditProblemReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EditProblemReq.DiscardUnknown(m)
}

var xxx_messageInfo_EditProblemReq proto.InternalMessageInfo

func (m *EditProblemReq) GetProblem() *Problem {
	if m != nil {
		return m.Problem
	}
	return nil
}

type EditProblemResp struct {
	IsSuccess            bool     `protobuf:"varint,2,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EditProblemResp) Reset()         { *m = EditProblemResp{} }
func (m *EditProblemResp) String() string { return proto.CompactTextString(m) }
func (*EditProblemResp) ProtoMessage()    {}
func (*EditProblemResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2e4af9cb4edd521, []int{7}
}

func (m *EditProblemResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditProblemResp.Unmarshal(m, b)
}
func (m *EditProblemResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditProblemResp.Marshal(b, m, deterministic)
}
func (m *EditProblemResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditProblemResp.Merge(m, src)
}
func (m *EditProblemResp) XXX_Size() int {
	return xxx_messageInfo_EditProblemResp.Size(m)
}
func (m *EditProblemResp) XXX_DiscardUnknown() {
	xxx_messageInfo_EditProblemResp.DiscardUnknown(m)
}

var xxx_messageInfo_EditProblemResp proto.InternalMessageInfo

func (m *EditProblemResp) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func init() {
	proto.RegisterType((*GetProblemsReq)(nil), "protocol.GetProblemsReq")
	proto.RegisterType((*GetProblemsResp)(nil), "protocol.GetProblemsResp")
	proto.RegisterType((*GetProblemByIDReq)(nil), "protocol.GetProblemByIDReq")
	proto.RegisterType((*GetProblemByIDResp)(nil), "protocol.GetProblemByIDResp")
	proto.RegisterType((*AddProblemReq)(nil), "protocol.AddProblemReq")
	proto.RegisterType((*AddProblemResp)(nil), "protocol.AddProblemResp")
	proto.RegisterType((*EditProblemReq)(nil), "protocol.EditProblemReq")
	proto.RegisterType((*EditProblemResp)(nil), "protocol.EditProblemResp")
}

func init() { proto.RegisterFile("proto/problem_manage.proto", fileDescriptor_a2e4af9cb4edd521) }

var fileDescriptor_a2e4af9cb4edd521 = []byte{
	// 253 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x8d, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0x69, 0x0b, 0xda, 0xbd, 0xb1, 0xce, 0xe5, 0x54, 0x06, 0x42, 0x89, 0x97, 0x81, 0xd8,
	0x89, 0x1e, 0x55, 0x70, 0x43, 0x11, 0x6f, 0x12, 0x6f, 0x5e, 0x46, 0xd7, 0x84, 0x12, 0x58, 0x96,
	0x6c, 0x2f, 0x1e, 0xfc, 0xef, 0x65, 0x49, 0xa3, 0x9b, 0x08, 0x85, 0x9d, 0xf2, 0xf8, 0xf2, 0xfb,
	0xbe, 0x1f, 0x8c, 0xcd, 0x56, 0x5b, 0x3d, 0x35, 0x5b, 0xbd, 0x5c, 0x09, 0xb5, 0x50, 0xd5, 0xba,
	0x6a, 0x44, 0xe9, 0x42, 0x92, 0xba, 0xa7, 0xd6, 0xab, 0x31, 0xf1, 0x54, 0xad, 0x95, 0xd2, 0x6b,
	0xff, 0x4b, 0x29, 0x64, 0x2f, 0xc2, 0xbe, 0xf9, 0x22, 0x32, 0xb1, 0x21, 0x67, 0x90, 0xd8, 0xaa,
	0xc9, 0xa3, 0x22, 0x9a, 0xf4, 0xd8, 0xee, 0xa4, 0x8f, 0x30, 0x3c, 0x60, 0xd0, 0x90, 0x2b, 0x48,
	0x5b, 0x19, 0xe6, 0x71, 0x91, 0x4c, 0xfa, 0x37, 0xa3, 0x32, 0x78, 0xca, 0x96, 0x64, 0x3f, 0x08,
	0xbd, 0x80, 0xd1, 0xef, 0xc2, 0xfc, 0xeb, 0xf5, 0x69, 0x27, 0xca, 0x20, 0x96, 0xdc, 0x79, 0x12,
	0x16, 0x4b, 0x4e, 0x67, 0x40, 0xfe, 0x42, 0x68, 0xc8, 0x25, 0x9c, 0xb6, 0x33, 0x79, 0x5c, 0x44,
	0xff, 0x8b, 0x02, 0x41, 0xef, 0x61, 0x30, 0xe3, 0x3c, 0xc4, 0x62, 0xb3, 0xdf, 0x8e, 0x3a, 0xdb,
	0x53, 0xc8, 0xf6, 0xdb, 0x68, 0xc8, 0x39, 0x80, 0xc4, 0x05, 0x7e, 0xd6, 0xb5, 0x40, 0x74, 0xfe,
	0x94, 0xf5, 0x24, 0xbe, 0xfb, 0x80, 0x3e, 0x40, 0xf6, 0xcc, 0xa5, 0x3d, 0xd6, 0x77, 0x0d, 0xc3,
	0x83, 0x7a, 0xa7, 0x70, 0x3e, 0xf8, 0xe8, 0x37, 0xfa, 0x2e, 0x2c, 0x2e, 0x4f, 0xdc, 0x75, 0xfb,
	0x1d, 0x00, 0x00, 0xff, 0xff, 0x5a, 0x40, 0xc5, 0x86, 0xff, 0x01, 0x00, 0x00,
}
